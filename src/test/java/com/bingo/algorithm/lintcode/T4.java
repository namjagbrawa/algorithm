package com.bingo.algorithm.lintcode;

import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;

/**
 * @author zhangge created on 2019-03-05
 * @version $Id$
 */
public class T4 {

    @Test
    public void uglyNumber() {
        Assert.assertEquals(16, uglyNumberLogN(12));
        Assert.assertEquals(40, uglyNumberLogN(21));
        Assert.assertEquals(324, uglyNumberLogN(57));
    }

    private int uglyNumberLogN(int number) {
        int[] array = new int[number];
        array[0] = 1;
        int read2 = 0;
        int read3 = 0;
        int read5 = 0;
        int location = 1;
        while (location < number) {
            int multi2 = 2 * array[read2];
            int multi3 = 3 * array[read3];
            int multi5 = 5 * array[read5];

            /*int min = Math.min(multi2, Math.min(multi3, multi5));

            if (multi2 == min) {

            }
            if (multi3 == min) {

            }
            if (multi5 == min) {

            }

            array[location] = min;*/

            if (multi2 <= multi3 && multi2 <= multi5) {
                array[location] = multi2;
                read2++;
            }
            if (multi3 <= multi2 && multi3 <= multi5) {
                array[location] = multi3;
                read3++;
            }
            if (multi5 <= multi2 && multi5 <= multi3) {
                array[location] = multi5;
                read5++;
            }
            location++;
        }
        // System.out.println(Arrays.toString(array));
        return array[number - 1];
    }

    private void printAllUglyNumber(int number) {
        int temp = 1;
        int order = 1;
        while (temp < number) {
            if (isUglyNumber(temp)) {
                System.out.println(order + " = " + temp + " : " + temp / order + " % " + temp % order);
                order++;
            }
            temp++;
        }
    }

    private boolean isUglyNumber(int number) {
        int temp = number;
        while (true) {
            if (temp % 2 == 0) {
                temp = temp / 2;
            } else if (temp % 3 == 0) {
                temp = temp / 3;
            } else if (temp % 5 == 0) {
                temp = temp / 5;
            } else {
                return temp == 1 ? true : false;
            }
        }
    }
}

// 1 = 1 : 1 % 0
// 2 = 2 : 1 % 0
// 3 = 3 : 1 % 0
// 4 = 4 : 1 % 0
// 5 = 5 : 1 % 0
// 6 = 6 : 1 % 0
// 7 = 8 : 1 % 1
// 8 = 9 : 1 % 1
// 9 = 10 : 1 % 1
// 10 = 12 : 1 % 2
// 11 = 15 : 1 % 4
// 12 = 16 : 1 % 4
// 13 = 18 : 1 % 5
// 14 = 20 : 1 % 6
// 15 = 24 : 1 % 9
// 16 = 25 : 1 % 9
// 17 = 27 : 1 % 10
// 18 = 30 : 1 % 12
// 19 = 32 : 1 % 13
// 20 = 36 : 1 % 16
//21 = 40 : 1 % 19
//22 = 45 : 2 % 1
//23 = 48 : 2 % 2
//24 = 50 : 2 % 2
//25 = 54 : 2 % 4
//26 = 60 : 2 % 8
//27 = 64 : 2 % 10
//28 = 72 : 2 % 16
//29 = 75 : 2 % 17
//30 = 80 : 2 % 20
//31 = 81 : 2 % 19
//32 = 90 : 2 % 26
//33 = 96 : 2 % 30
//34 = 100 : 2 % 32
//35 = 108 : 3 % 3
//36 = 120 : 3 % 12
//37 = 125 : 3 % 14
//38 = 128 : 3 % 14
//39 = 135 : 3 % 18
//40 = 144 : 3 % 24
//41 = 150 : 3 % 27
//42 = 160 : 3 % 34
//43 = 162 : 3 % 33
//44 = 180 : 4 % 4
//45 = 192 : 4 % 12
//46 = 200 : 4 % 16
//47 = 216 : 4 % 28
//48 = 225 : 4 % 33
//49 = 240 : 4 % 44
//50 = 243 : 4 % 43
//51 = 250 : 4 % 46
//52 = 256 : 4 % 48
//53 = 270 : 5 % 5
//54 = 288 : 5 % 18
//55 = 300 : 5 % 25
//56 = 320 : 5 % 40
//57 = 324 : 5 % 39
//58 = 360 : 6 % 12
//59 = 375 : 6 % 21
//60 = 384 : 6 % 24
//61 = 400 : 6 % 34
//62 = 405 : 6 % 33
//63 = 432 : 6 % 54
//64 = 450 : 7 % 2
//65 = 480 : 7 % 25
//66 = 486 : 7 % 24
//67 = 500 : 7 % 31
//68 = 512 : 7 % 36
//69 = 540 : 7 % 57
//70 = 576 : 8 % 16
//71 = 600 : 8 % 32
//72 = 625 : 8 % 49
//73 = 640 : 8 % 56
//74 = 648 : 8 % 56
//75 = 675 : 9 % 0
//76 = 720 : 9 % 36
//77 = 729 : 9 % 36
//78 = 750 : 9 % 48
//79 = 768 : 9 % 57
//80 = 800 : 10 % 0
//81 = 810 : 10 % 0
//82 = 864 : 10 % 44
//83 = 900 : 10 % 70
//84 = 960 : 11 % 36
//85 = 972 : 11 % 37
//86 = 1000 : 11 % 54
//87 = 1024 : 11 % 67
//88 = 1080 : 12 % 24
//89 = 1125 : 12 % 57
//90 = 1152 : 12 % 72
//91 = 1200 : 13 % 17
//92 = 1215 : 13 % 19
//93 = 1250 : 13 % 41
//94 = 1280 : 13 % 58
//95 = 1296 : 13 % 61
//96 = 1350 : 14 % 6
//97 = 1440 : 14 % 82
//98 = 1458 : 14 % 86
//99 = 1500 : 15 % 15
//100 = 1536 : 15 % 36
//101 = 1600 : 15 % 85
//102 = 1620 : 15 % 90
//103 = 1728 : 16 % 80
//104 = 1800 : 17 % 32
//105 = 1875 : 17 % 90
//106 = 1920 : 18 % 12
//107 = 1944 : 18 % 18
//108 = 2000 : 18 % 56
//109 = 2025 : 18 % 63
//110 = 2048 : 18 % 68
//111 = 2160 : 19 % 51
//112 = 2187 : 19 % 59
//113 = 2250 : 19 % 103
//114 = 2304 : 20 % 24
//115 = 2400 : 20 % 100
//116 = 2430 : 20 % 110
//117 = 2500 : 21 % 43
//118 = 2560 : 21 % 82
//119 = 2592 : 21 % 93
//120 = 2700 : 22 % 60
//121 = 2880 : 23 % 97
//122 = 2916 : 23 % 110
//123 = 3000 : 24 % 48
//124 = 3072 : 24 % 96
//125 = 3125 : 25 % 0
//126 = 3200 : 25 % 50
//127 = 3240 : 25 % 65
//128 = 3375 : 26 % 47
//129 = 3456 : 26 % 102
//130 = 3600 : 27 % 90
//131 = 3645 : 27 % 108
//132 = 3750 : 28 % 54
//133 = 3840 : 28 % 116
//134 = 3888 : 29 % 2
//135 = 4000 : 29 % 85
//136 = 4050 : 29 % 106
//137 = 4096 : 29 % 123
//138 = 4320 : 31 % 42
//139 = 4374 : 31 % 65
//140 = 4500 : 32 % 20
//141 = 4608 : 32 % 96
//142 = 4800 : 33 % 114
//143 = 4860 : 33 % 141
//144 = 5000 : 34 % 104
//145 = 5120 : 35 % 45
//146 = 5184 : 35 % 74
//147 = 5400 : 36 % 108
//148 = 5625 : 38 % 1
//149 = 5760 : 38 % 98
//150 = 5832 : 38 % 132
//151 = 6000 : 39 % 111
//152 = 6075 : 39 % 147
//153 = 6144 : 40 % 24
//154 = 6250 : 40 % 90
//155 = 6400 : 41 % 45
//156 = 6480 : 41 % 84
//157 = 6561 : 41 % 124
//158 = 6750 : 42 % 114
//159 = 6912 : 43 % 75
//160 = 7200 : 45 % 0
//161 = 7290 : 45 % 45
//162 = 7500 : 46 % 48
//163 = 7680 : 47 % 19
//164 = 7776 : 47 % 68
//165 = 8000 : 48 % 80
//166 = 8100 : 48 % 132
//167 = 8192 : 49 % 9
//168 = 8640 : 51 % 72
//169 = 8748 : 51 % 129
//170 = 9000 : 52 % 160
//171 = 9216 : 53 % 153
//172 = 9375 : 54 % 87
//173 = 9600 : 55 % 85
//174 = 9720 : 55 % 150
//175 = 10000 : 57 % 25